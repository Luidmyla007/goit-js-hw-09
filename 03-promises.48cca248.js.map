{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SA4BE,SAASC,EAAcC,G,IAAEC,EAAFD,EAAEE,SAAUC,EAAZH,EAAYI,MAC7BC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WAWV,OAVmB,IAAIC,SAAQ,SAACC,EAASC,GAEpCN,EACHK,EAAQ,CAAER,SAAAD,EAAUG,MAAAD,IAEpBQ,EAAO,CAAET,SAAAD,EAAUG,MAAAD,G,IAMjBS,MAAK,SAAAC,G,IAAGX,EAAQW,EAARX,SAAUE,EAAKS,EAALT,MACjBU,EAAAjB,GAASkB,OAAOC,QAAQ,qBAAoCC,OAAff,EAAS,QAAYe,OAANb,EAAM,M,IAEnEc,OAAM,SAAAL,G,IAAGX,EAAQW,EAARX,SAAUE,EAAKS,EAALT,MAClBU,EAAAjB,GAASkB,OAAOI,QAAQ,oBAAmCF,OAAff,EAAS,QAAYe,OAANb,EAAM,M,MAEpED,E,CA/CUiB,SAASC,cAAc,SAC/BC,iBAAiB,UACxB,SAAkBC,GAChBA,EAAMC,iBASN,IARA,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYvB,EAAKqB,EAALrB,MAAOwB,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAGrBC,EAAWC,OAAO3B,EAAM4B,OACxBC,EAAUF,OAAOH,EAAKI,OACtBE,EAAYH,OAAOF,EAAOG,OAEvBG,EAAI,EAAGA,GAAKD,EAAWC,IAAK,CACnC,IAAIC,EAAc,GAClBA,EAAYlC,SAAWiC,EACM,IAAzBC,EAAYlC,SACdkC,EAAYhC,MAAQ0B,EAEfM,EAAYhC,MAAQ0B,EAAWG,GAAWE,EAAI,GAErDpC,EAAcqC,GAEdb,EAAMG,cAAcW,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst myForm = document.querySelector('.form');\nmyForm.addEventListener(\"submit\", onSubmit);\nfunction onSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount }\n  } = event.currentTarget;\n\n  const numDelay = Number(delay.value);\n  const numStep = Number(step.value);\n  const numAmount = Number(amount.value);\n    \n  for (let i = 1; i <= numAmount; i++) {\n    let promiseArgs = {};\n    promiseArgs.position = i;\n    if (promiseArgs.position === 1) {\n      promiseArgs.delay = numDelay;\n    }\n    else { promiseArgs.delay = numDelay + numStep * (i - 1); };\n   \n    createPromise(promiseArgs);\n   \n    event.currentTarget.reset();\n  };\n}\n\n  function createPromise({ position, delay } ) {\n  const shouldResolve = Math.random() > 0.3;\n    \n  setTimeout(() => {\n      const promise = new Promise((resolve, reject) => {\n        \n    if (shouldResolve) {\n     resolve({ position, delay });\n    } else {\n     reject({ position, delay });\n    }\n  });\n \n  \n   return promise\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }, delay);\n}\n\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","param1","position1","position","delay1","delay","shouldResolve","Math","random","setTimeout","Promise","resolve","reject","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","step","amount","numDelay","Number","value","numStep","numAmount","i","promiseArgs","reset"],"version":3,"file":"03-promises.48cca248.js.map"}