{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA4BE,SAASC,GAAgBC,SAAAC,EAAUC,MAAAC,IACnC,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,IACS,IAAIC,SAAQ,CAACC,EAASC,KAEpCN,EACHK,EAAQ,CAAET,SAAAC,EAAUC,MAAAC,IAEpBO,EAAO,CAAEV,SAAAC,EAAUC,MAAAC,GAAQ,IAMzBQ,MAAK,EAACX,SAAEA,EAAQE,MAAEA,MACjBU,EAAAf,GAASgB,OAAOC,QAAQ,qBAAqBd,QAAeE,MAAU,IAEvEa,OAAM,EAACf,SAAEA,EAAQE,MAAEA,MAClBU,EAAAf,GAASgB,OAAOG,QAAQ,oBAAoBhB,QAAeE,MAAU,KAExEC,E,CA/CUc,SAASC,cAAc,SAC/BC,iBAAiB,UACxB,SAAkBC,GAChBA,EAAMC,iBACN,MACEC,UAAUpB,MAAEA,EAAKqB,KAAEA,EAAIC,OAAEA,IACvBJ,EAAMK,cAEJC,EAAWC,OAAOzB,EAAM0B,OACxBC,EAAUF,OAAOJ,EAAKK,OACtBE,EAAYH,OAAOH,EAAOI,OAEhC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAWC,IAAK,CACnC,IAAIC,EAAc,GAClBA,EAAYhC,SAAW+B,EACM,IAAzBC,EAAYhC,SACdgC,EAAY9B,MAAQwB,EAEfM,EAAY9B,MAAQwB,EAAWG,GAAWE,EAAI,GAErDhC,EAAciC,GAEdZ,EAAMK,cAAcQ,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst myForm = document.querySelector('.form');\nmyForm.addEventListener(\"submit\", onSubmit);\nfunction onSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount }\n  } = event.currentTarget;\n\n  const numDelay = Number(delay.value);\n  const numStep = Number(step.value);\n  const numAmount = Number(amount.value);\n    \n  for (let i = 1; i <= numAmount; i++) {\n    let promiseArgs = {};\n    promiseArgs.position = i;\n    if (promiseArgs.position === 1) {\n      promiseArgs.delay = numDelay;\n    }\n    else { promiseArgs.delay = numDelay + numStep * (i - 1); };\n   \n    createPromise(promiseArgs);\n   \n    event.currentTarget.reset();\n  };\n}\n\n  function createPromise({ position, delay } ) {\n  const shouldResolve = Math.random() > 0.3;\n    \n  setTimeout(() => {\n      const promise = new Promise((resolve, reject) => {\n        \n    if (shouldResolve) {\n     resolve({ position, delay });\n    } else {\n     reject({ position, delay });\n    }\n  });\n \n  \n   return promise\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }, delay);\n}\n\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","position1","delay","delay1","shouldResolve","Math","random","setTimeout","Promise","resolve","reject","then","$parcel$interopDefault","Notify","success","catch","failure","document","querySelector","addEventListener","event","preventDefault","elements","step","amount","currentTarget","numDelay","Number","value","numStep","numAmount","i","promiseArgs","reset"],"version":3,"file":"03-promises.7001c4d0.js.map"}